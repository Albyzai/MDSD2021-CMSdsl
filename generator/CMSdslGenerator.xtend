/*
 * generated by Xtext 2.22.0
 */
package jonasmohr.mdsd2021.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import jonasmohr.mdsd2021.generator.client.ClientGenerator
import javax.inject.Inject
import jonasmohr.mdsd2021.cMSdsl.Project
import org.eclipse.emf.ecore.EObject
import org.eclipse.emf.ecore.util.EcoreUtil
import org.eclipse.emf.ecore.xmi.impl.XMLResourceImpl
import jonasmohr.mdsd2021.generator.server.ServerGenerator

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class CMSdslGenerator extends AbstractGenerator {

	@Inject extension ClientGenerator
	@Inject extension ServerGenerator

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		val modelTree = resource.allContents
		val Project modelInstance = modelTree.filter(Project).next
		modelInstance.display
		modelInstance.generateClient(fsa)
		modelInstance.generateServer(fsa)
	}

	def display(EObject model) {
		val res = new XMLResourceImpl
		res.contents.add(EcoreUtil::copy(model))
		System::out.println("Dump of model:");
		res.save(System.out, null)
	}
}
